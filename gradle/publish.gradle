ext.packaging = 'jar'

java {
    withSourcesJar()
    withJavadocJar()
}

artifacts {
    archives jar
    archives sourcesJar
    archives javadocJar
}


publishing {
    repositories {
        maven {
            final String releaseRepo = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
            final String snapshotRepo = 'https://oss.sonatype.org/content/repositories/snapshots/'
            final findProperty = {String k, v ->
                return project.hasProperty(k) ? project.property(k) : v
            }
            url = project.version.endsWith('SNAPSHOT') ? snapshotRepo : releaseRepo
            println "publishing to url: ${url} ..."
            credentials {
                username = findProperty('maven.username', '')
                password = findProperty('maven.password', '')
            }
        }
    }

    publications {
        mavenJava(MavenPublication) {
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = "Raistlic's Commons Library" as String
                description = 'Common utilities to make general tasks in Java programs easier.'
                url = 'https://github.com/raistlic'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'leic'
                        name = 'Lei Chen'
                        email = 'raistlic@gmail.com'
                    }
                }
                scm {
                    url = 'https://github.com/raistlic/lib-common'
                    connection = 'https://github.com/raistlic/lib-common'
                    developerConnection = 'https://github.com/raistlic/lib-common'
                }
            }
        }
    }
}

signing {
    final hasRequiredProperties = {
        boolean missingProperty = [
                'signing.keyId',
                'signing.password',
                'signing.secretKeyFile'
        ].any {
            boolean result = !project.hasProperty(it)
            if (result) {
                println "missing property: ${it}"
            }
            return result
        }
        return !missingProperty
    }
    required hasRequiredProperties
    sign publishing.publications.mavenJava
    if (hasRequiredProperties()) {
        println 'required properties found and configuring signing task ...'
        final String signingKeyId = project.properties['signing.keyId'] as String
        final String signingPassword = project.properties['signing.password'] as String
        final String signingKey = new File(project.properties['signing.secretKeyFile'] as String).text
        useInMemoryPgpKeys(signingKeyId, signingKey, signingPassword)
    } else {
        println 'required properties missing and ignoring signing task.'
    }
}
